<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assembly-CSharp-Editor</name>
    </assembly>
    <members>
        <member name="T:Polybrush.z_BrushMode">
            Base class for brush modes.
        </member>
        <member name="T:Polybrush.z_BrushModeMesh">
            Base class for brush modes that modify the mesh.
        </member>
        <member name="T:Polybrush.z_BrushModePaint">
            Vertex painter brush mode.
        </member>
        <member name="T:Polybrush.z_BrushModePrefab">
            Prefab painter brush mode.
        </member>
        <member name="M:Polybrush.z_BrushModePrefab.TestIntersection(UnityEngine.GameObject)">
            Tests if go intersects with any painted objects.
        </member>
        <member name="T:Polybrush.z_BrushModeRaiseLower">
            Brush mode for moving vertices in a direction.
        </member>
        <member name="T:Polybrush.z_BrushModeSculpt">
            Base class for brush modes that move vertices around.  Implements an overlay preview.
        </member>
        <member name="T:Polybrush.z_BrushModeSmooth">
            Brush mode for moving vertices in a direction.
        </member>
        <member name="T:Polybrush.z_BrushModeTexture">
            	Vertex texture painter brush mode.
             	Similar to z_BrushModePaint, except it packs blend information into both the color32 and UV3/4 channels.
        </member>
        <member name="M:Polybrush.z_BrushModeTexture.CheckForTextureBlendSupport(UnityEngine.GameObject)">
            Test a gameObject and it's mesh renderers for compatible shaders, and if one is found
            load it's attribute data into meshAttributes.
        </member>
        <member name="T:Polybrush.z_BrushSettings">
            Collection of settings for a sculpting brush.
        </member>
        <member name="F:Polybrush.z_BrushSettings._radius">
            The total affected radius of this brush.
        </member>
        <member name="F:Polybrush.z_BrushSettings._falloff">
            At what point the strength of the brush begins to taper off.
        </member>
        <member name="F:Polybrush.z_BrushSettings._strength">
            How may times per-second a mouse click will apply a brush stroke.
        </member>
        <member name="F:Polybrush.z_BrushSettings.allowNonNormalizedFalloff">
            If true, the falloff curve won't be clamped to keyframes at 0,0 and 1,1.
        </member>
        <member name="P:Polybrush.z_BrushSettings.radius">
            The total affected radius of this brush.
        </member>
        <member name="P:Polybrush.z_BrushSettings.falloff">
            At what point the strength of the brush begins to taper off.
            0 means the strength tapers from the center of the brush to the edge.
            1 means the strength is 100% all the way through the brush.
            .5 means the strength is 100% through 1/2 the radius then tapers to the edge.
        </member>
        <member name="P:Polybrush.z_BrushSettings.normalizedRadius">
            Radius value scaled to 0-1.
        </member>
        <member name="M:Polybrush.z_BrushSettings.SetDefaultValues">
            Set the object's default values.
        </member>
        <member name="M:Polybrush.z_BrushSettings.CopyTo(Polybrush.z_BrushSettings)">
            Copy all properties to target
        </member>
        <member name="T:Polybrush.z_BrushTarget">
            Stores information about the object a brush is currently hovering.
        </member>
        <member name="M:Polybrush.z_BrushTarget.#ctor(Polybrush.z_EditableObject)">
            Constructor.
        </member>
        <member name="M:Polybrush.z_BrushTarget.#ctor(Polybrush.z_EditableObject,System.Collections.Generic.List{Polybrush.z_RaycastHit})">
            Explicit constructor.
        </member>
        <member name="M:Polybrush.z_BrushTarget.GetAllWeights(System.Boolean)">
            Returns an array of weights where each index is the max of all raycast hits.
        </member>
        <member name="T:Polybrush.z_ColorPalette">
            A set of colors.
        </member>
        <member name="T:Polybrush.z_EditableObject">
            	Stores a cache of the unmodified mesh and meshrenderer
            	so that the z_Editor can work non-destructively.  Also
             	handles ProBuilder compatibility so that brush modes don't
             	have to deal with it.
        </member>
        <member name="M:Polybrush.z_EditableObject.GetCompositeMesh">
            Return a mesh that is the combination of both additionalVertexStreams and the originalMesh.
            	- Position
            	- UV0
            	- UV2
            	- UV3
            	- UV4
            	- Color
            	- Tangent
            If usingVertexStreams is false, null is returned.
        </member>
        <member name="P:Polybrush.z_EditableObject.IsValid">
            <summary>
            Shorthand for checking if object and mesh are non-null.
            </summary>
        </member>
        <member name="M:Polybrush.z_EditableObject.Create(UnityEngine.GameObject)">
            Public constructor for editable objects.  Guarantees that a mesh
            is editable and takes care of managing the asset.
        </member>
        <member name="M:Polybrush.z_EditableObject.#ctor(UnityEngine.GameObject)">
            Internal constructor.
            \sa Create
        </member>
        <member name="M:Polybrush.z_EditableObject.SetMesh(UnityEngine.Mesh)">
            Sets the MeshFilter.sharedMesh or SkinnedMeshRenderer.sharedMesh to @mesh.
        </member>
        <member name="M:Polybrush.z_EditableObject.Apply(System.Boolean,System.Boolean)">
            	Applies mesh changes back to the pb_Object (if necessary).  Optionally does a
            	mesh rebuild.
            	@rebuildMesh only applies to ProBuilder meshes.
              @optimize determines if the mesh collisions are rebuilt (if that option is enabled) or if
            	the mehs is a probuilder object, the mesh is optimized (condensed to share verts, other
            	otpimziations etc)
        </member>
        <member name="M:Polybrush.z_EditableObject.ApplyMeshAttributes(Polybrush.z_MeshChannel)">
            Apply the mesh channel attributes to the graphics mesh.
        </member>
        <member name="M:Polybrush.z_EditableObject.Revert">
            Set the MeshFilter or SkinnedMeshRenderer back to originalMesh.
        </member>
        <member name="T:Polybrush.z_PrefabPalette">
            A set of Prefabs.
        </member>
        <member name="T:Polybrush.z_PreferenceDictionary">
            Store Polybrush settings in a project-local manner.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.OnBeforeSerialize">
            Perform the ritual "Please Serialize My Dictionary" dance.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.OnAfterDeserialize">
            Reconstruct preference dictionaries from serialized lists.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.SetDefaultValues">
            Clear dictionary values.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.HasKey(System.String)">
            Check if a key is contained within any type dictionary.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.GetBool(System.String,System.Boolean)">
            Fetch a value from the stored preferences.  If key is not found, a default value is returned.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.GetInt(System.String,System.Int32)">
            Fetch a value from the stored preferences.  If key is not found, a default value is returned.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.GetFloat(System.String,System.Single)">
            Fetch a value from the stored preferences.  If key is not found, a default value is returned.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.GetString(System.String,System.String)">
            Fetch a value from the stored preferences.  If key is not found, a default value is returned.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.GetColor(System.String,UnityEngine.Color)">
            Fetch a value from the stored preferences.  If key is not found, a default value is returned.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.SetBool(System.String,System.Boolean)">
            Set a value for key in the saved prefs.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.SetInt(System.String,System.Int32)">
            Set a value for key in the saved prefs.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.SetFloat(System.String,System.Single)">
            Set a value for key in the saved prefs.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.SetString(System.String,System.String)">
            Set a value for key in the saved prefs.
        </member>
        <member name="M:Polybrush.z_PreferenceDictionary.SetColor(System.String,UnityEngine.Color)">
            Set a value for key in the saved prefs.
        </member>
        <member name="T:Polybrush.z_RaycastHit">
            A simplified version of UnityEngine.RaycastHit that only contains information we're interested in.
        </member>
        <member name="F:Polybrush.z_RaycastHit.distance">
            Distance from the Raycast origin to the point of impact.
        </member>
        <member name="F:Polybrush.z_RaycastHit.position">
            The position in model space where a raycast intercepted a triangle.
        </member>
        <member name="F:Polybrush.z_RaycastHit.normal">
            The normal in model space of the triangle that this raycast hit.
        </member>
        <member name="F:Polybrush.z_RaycastHit.triangle">
            The triangle index of the hit face.
        </member>
        <member name="F:Polybrush.z_RaycastHit.weights">
            The vertices affected by this ray will have their weights stored here.
        </member>
        <member name="M:Polybrush.z_RaycastHit.#ctor(System.Single,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)">
            Constructor.
            \notes Tautological comments aren't very helpful.
        </member>
        <member name="M:Polybrush.z_RaycastHit.ToString">
            Prints a summary of this struct.
        </member>
        <member name="T:Polybrush.z_ReflectionUtil">
            <summary>
            Static helper methods for working with reflection.  Mostly used for ProBuilder compatibility.
            </summary>
        </member>
        <member name="P:Polybrush.z_ReflectionUtil.ProBuilderEditorWindow">
            <summary>
            Reference to the ProBuilder Editor window if it is avaiable.
            </summary>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.ProBuilderExists">
            <summary>
            Tests if ProBuilder is available in the project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.IsProBuilderObject(UnityEngine.GameObject)">
            <summary>
            Tests if a GameObject is a ProBuilder mesh or not.
            </summary>
            <param name="gameObject"></param>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.GetComponent(UnityEngine.GameObject,System.String)">
            <summary>
            Get a component with type name.
            </summary>
            <param name="gameObject"></param>
            <param name="componentTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.GetType(System.String,System.String)">
            <summary>
            Fetch a type with name and optional assembly name.  `type` should include namespace.
            </summary>
            <param name="type"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.GetTypeCached(System.String,System.String)">
            <summary>
            Same as GetType except this function caches the result for quick lookups.
            </summary>
            <param name="type"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.Invoke(System.Object,System.String,System.Reflection.BindingFlags,System.Object[])">
            <summary>
            Call a method with args.
            </summary>
            <param name="target"></param>
            <param name="method"></param>
            <param name="flags"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.GetValue(System.Object,System.String,System.String,System.Reflection.BindingFlags)">
            <summary>
            Fetch a value using GetProperty or GetField.
            </summary>
            <param name="target"></param>
            <param name="type"></param>
            <param name="member"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.ProBuilder_RefreshMethodInfo">
            <summary>
            Fallback for ProBuilder 2.6.1 and lower (Refresh() with no params).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Polybrush.z_ReflectionUtil.ProBuilder_Optimize(System.Object)">
            <summary>
            Calls pb_EditorUtility.Optimize
            </summary>
            <param name="pb"></param>
        </member>
        <member name="T:Polybrush.z_BrushTool">
            Tool enum for brush modes.
        </member>
        <member name="T:Polybrush.z_AttributeLayoutJsonEditor">
            Custom inspector for .pbs.json files.
        </member>
        <member name="M:Polybrush.z_AttributeLayoutJsonEditor.DrawTextAssetInspector">
            Copy/paste of Unity TextAssetInspector, since DrawDefaultInspector doesn't work with TextAssets.
            Not using reflection because this is such a small function that it makes more sense to just c/p
            and avoid the issues of Unity possibly changing names or signatures in the future.
        </member>
        <member name="T:Polybrush.z_BrushSettingsEditor">
            The default editor for z_BrushSettings.
        </member>
        <member name="T:Polybrush.z_Editor">
            Interface and settings for Polybrush
        </member>
        <member name="M:Polybrush.z_Editor.GetBrushTarget(UnityEngine.GameObject)">
            Get a z_EditableObject matching the GameObject go or create a new one.
        </member>
        <member name="M:Polybrush.z_Editor.UpdateBrush(UnityEngine.Vector2,System.Boolean)">
            Update the current brush object and weights with the current mouse position.
        </member>
        <member name="M:Polybrush.z_Editor.DoMeshRaycast(UnityEngine.Ray,Polybrush.z_BrushTarget)">
            Calculate the weights for this ray.
        </member>
        <member name="T:Polybrush.z_SplatWeightEditor">
            The default editor for z_SplatWeight.
        </member>
        <member name="M:Polybrush.z_SplatWeightEditor.OnInspectorGUI(System.Int32,Polybrush.z_SplatWeight@,Polybrush.z_AttributeLayout[])">
            Editor for blend.  Returns true if blend has been modified.
        </member>
        <member name="T:Polybrush.z_AssetPreview">
            Helper class for generating asset preview textures.  Necessary
            because AssetPreview.GetAssetPreview only works with assets
            and not prefabs.
        </member>
        <member name="M:Polybrush.z_AssetPreview.GetAssetPreview(UnityEngine.Object,System.Int32)">
            Attempt to retrieve a new Texture2D asset preview.
        </member>
        <member name="T:Polybrush.z_BakeAdditionalVertexStreams">
            Utility for applying vertex stream data directly to a mesh.  Can either override the existing
            mesh arrays or create a new mesh from the composite.
        </member>
        <member name="M:Polybrush.z_EditorUtility.InSelection(UnityEngine.GameObject)">
            True if this gameObject is in the Selection.gameObjects array or it is a
            child of a gameObject in that array.
        </member>
        <member name="M:Polybrush.z_EditorUtility.GetMeshGUID(UnityEngine.Mesh,System.String@)">
            Return the mesh source, and the guid if applicable (scene instances don't get GUIDs).
        </member>
        <member name="M:Polybrush.z_EditorUtility.SaveMeshAsset(UnityEngine.Mesh,UnityEngine.MeshFilter,UnityEngine.SkinnedMeshRenderer)">
            	Save any modifications to the z_EditableObject.  If the mesh is a scene mesh or imported mesh, it
            	will be saved to a new asset.  If the mesh was originally an asset mesh, the asset is overwritten.
             	\return true if save was successful, false if user-canceled or otherwise failed.
        </member>
        <member name="M:Polybrush.z_EditorUtility.SaveMeshAttributesData(Polybrush.z_AttributeLayoutContainer,System.Boolean)">
            Store user-set shader attribute information.
            Returns the path written to on success, null otherwise.
        </member>
        <member name="M:Polybrush.z_EditorUtility.FindPolybrushMetaDataForShader(UnityEngine.Shader)">
            Find a path to the Polybrush metadata for a shader.  Returns null if not found.
        </member>
        <member name="M:Polybrush.z_EditorUtility.FindMeshAttributesForShader(UnityEngine.Shader,Polybrush.z_AttributeLayoutContainer@)">
            Searches only by looking for a compatibly named file in the same directory.
        </member>
        <member name="M:Polybrush.z_EditorUtility.LoadIcon(System.String)">
            Load a Unity internal icon.
        </member>
        <member name="M:Polybrush.z_EditorUtility.GetDefaultAsset``1(System.String)">
            Fetch a default asset from path relative to the product folder.  If not found, a new one is created.
        </member>
        <member name="M:Polybrush.z_EditorUtility.SetSelectionRenderState(UnityEngine.Renderer,Polybrush.z_SelectionRenderState)">
            Set the selected render state for an object.  In Unity 5.4 and lower, this just toggles wireframe 
            on or off.
        </member>
        <member name="T:Polybrush.z_GUI">
            GUI field extensions.
        </member>
        <member name="F:Polybrush.z_GUI.tmp_content">
            Used as a container to pass text to GUI functions requiring a GUIContent without allocating
            a new GUIContent isntance.
        </member>
        <member name="F:Polybrush.z_GUI.backgroundColor">
            Maintain GUI.backgroundColor history.
        </member>
        <member name="P:Polybrush.z_GUI.headerTextStyle">
            Large bold slightly transparent font.
        </member>
        <member name="T:Polybrush.z_GUILayout">
            GUI field extensions.
        </member>
        <member name="M:Polybrush.z_GUILayout.ColorMaskField(System.String,Polybrush.z_ColorMask)">
            Color field control
        </member>
        <member name="M:Polybrush.z_GUILayout.FreeSlider(System.String,System.Single,System.Single,System.Single)">
            Similar to EditorGUILayoutUtility.Slider, except this allows for values outside of the min/max bounds via the float field.
        </member>
        <member name="M:Polybrush.z_GUILayout.FreeSlider(UnityEngine.GUIContent,System.Single,System.Single,System.Single)">
            Similar to EditorGUILayoutUtility.Slider, except this allows for values outside of the min/max bounds via the float field.
        </member>
        <member name="T:Polybrush.z_Handles">
            Draw scene view handles and gizmos.
        </member>
        <member name="T:Polybrush.z_PostProcessTextureBlend">
            Provides a quick and dirty path to access a uv channels as Vector4 in ShaderForge
        </member>
        <member name="T:Polybrush.z_Pref">
            Editor preferences and defaults.
        </member>
        <member name="M:Polybrush.z_Pref.VersionCheck">
            		 *	Check if the last opened version of Polybrush matches this one.  Returns false if it doesn't.
            
        </member>
        <member name="M:Polybrush.z_SceneUtility.WorldRaycast(UnityEngine.Ray,UnityEngine.Transform,UnityEngine.Vector3[],System.Int32[],Polybrush.z_RaycastHit@,System.Single,Polybrush.Culling)">
            Find the nearest triangle intersected by InWorldRay on this mesh.  InWorldRay is in world space.
            @hit contains information about the hit point.  @distance limits how far from @InWorldRay.origin the hit
            point may be.  @cullingMode determines what face orientations are tested (Culling.Front only tests front
            faces, Culling.Back only tests back faces, and Culling.FrontBack tests both).
            Ray origin and position values are in local space.
        </member>
        <member name="M:Polybrush.z_SceneUtility.MeshRaycast(UnityEngine.Ray,UnityEngine.Vector3[],System.Int32[],Polybrush.z_RaycastHit@,System.Single,Polybrush.Culling)">
            Cast a ray (in model space) against a mesh.
        </member>
        <member name="M:Polybrush.z_SceneUtility.SceneViewInUse(UnityEngine.Event)">
            Returns true if the event is one that should consume the mouse or keyboard.
        </member>
        <member name="M:Polybrush.z_SceneUtility.CalculateWeightedVertices(Polybrush.z_BrushTarget,Polybrush.z_BrushSettings)">
            Calculates the per-vertex weight for each raycast hit and fills in brush target weights.
        </member>
        <member name="M:Polybrush.z_SceneUtility.PushGIWorkflowMode">
            Store the previous GIWorkflowMode and set the current value to OnDemand (or leave it Legacy).
        </member>
        <member name="M:Polybrush.z_SceneUtility.PopGIWorkflowMode">
            Return GIWorkflowMode to it's prior state.
        </member>
        <member name="T:Polybrush.z_ShaderUtil">
            Utility methods for working with shaders.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.GetSource(UnityEngine.Material)">
            	Attempt to read the shader source code to a string.  If source can't be found (built-in shaders are in binary bundles)
             	an empty string is returned.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.SupportsVertexColors(UnityEngine.Shader)">
            Returns true if shader has a COLOR attribute.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.GetMetaDataPath(UnityEngine.Shader)">
            	Parse the shader source for a Z_SHADER_METADATA line with the path
             	to the shader's polybrush metadata.  Path should be relative to the
            	directory of the shader.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.GetMeshAttributes(UnityEngine.Material,Polybrush.z_AttributeLayoutContainer@)">
            Loads z_AttributeLayout data from a shader.  Checks for both legacy (define Z_TEXTURE_CHANNELS) and
            .pbs.json metadata.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.SupportsTextureBlending(UnityEngine.Shader)">
            True if the shader likely supports texture blending.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.GetTextureChannelCount(System.String)">
            Get projected number of texture channels from Z_MESH_CHANNELS define.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.GetUsedMeshAttributes(UnityEngine.Material)">
            Returns the shader defined mesh attributes used.  Null if no attributes are defined.
        </member>
        <member name="M:Polybrush.z_ShaderUtil.GetBlendTextures(UnityEngine.Material,System.String,System.Int32,UnityEngine.Texture2D[]@,System.String[]@)">
            Tries to extract texture channels from a blend material, ignoring bump/normal images.
            This function always returns an array of size expectedTextureCount, filling in NULL
            where an image is not loaded.
        </member>
        <member name="T:ProBuilder2.EditorCommon.pb_AboutWindowSetup">
             INSTRUCTIONS
            
              - Only modify properties in the USER SETTINGS region.
            	- All content is loaded from external files (pc_AboutEntry_YourProduct.  Use the templates!
            Used to pop up the window on import.
        </member>
        <member name="T:ProBuilder2.EditorCommon.pb_AboutWindow">
             Changelog.txt file should follow this format:
            
            	| # Product Name 2.1.0
            	|
            	| ## Features
            	|
            	| - All kinds of awesome stuff
            	| - New flux capacitor design achieves time travel at lower velocities.
            	| - Dark matter reactor recalibrated.
            	|
            	| ## Bug Fixes
            	|
            	| - No longer explodes when spacebar is pressed.
            	| - Fix rolling issue in rickmeter.
            	|
            	| # Changes
            	|
            	| - Changed Blue to Red.
            	| - Enter key now causes explosions.
            
             This path is relative to the PRODUCT_ROOT path.
            
             Note that your changelog may contain multiple entries.  Only the top-most
             entry will be displayed.
        </member>
        <member name="M:ProBuilder2.EditorCommon.pb_AboutWindow.Init(System.Boolean)">
            Return true if Init took place, false if not.
        </member>
        <member name="M:ProBuilder2.EditorCommon.pb_AboutWindow.HorizontalLine">
            Draw a horizontal line across the screen and update the guilayout.
        </member>
        <member name="T:ProBuilder2.EditorCommon.pb_UpdateCheck">
            Check for updates to ProBuilder.
        </member>
        <member name="M:ProBuilder2.EditorCommon.pb_VersionInfo.FromString(System.String)">
            Create a pb_VersionInfo type from a string.
            Ex: "2.5.3b1"
        </member>
        <member name="T:ProBuilder2.EditorCommon.pb_AboutEntry">
            Contains information that the pb_AboutEntry.txt file holds.
        </member>
        <!-- Badly formed XML comment ignored for member "T:ProBuilder2.EditorCommon.pb_VersionUtil" -->
        <member name="M:ProBuilder2.EditorCommon.pb_VersionUtil.GetAboutEntry(ProBuilder2.EditorCommon.pb_AboutEntry@)">
            Get information from the currently installed ProBuilder version.
        </member>
        <member name="M:ProBuilder2.EditorCommon.pb_VersionUtil.FormatChangelog(System.String,ProBuilder2.EditorCommon.pb_VersionInfo@,System.String@)">
            Extracts and formats the latest changelog entry into rich text.  Also grabs the version.
        </member>
        <member name="T:ProBuilder2.EditorCommon.pb_MissingScriptEditor">
            Extends MonoBehaviour Inspector, automatically fixing missing script
            references (typically caused by ProBuilder upgrade process).
        </member>
        <!-- Badly formed XML comment ignored for member "F:ProBuilder2.EditorCommon.pb_MissingScriptEditor.index" -->
        <!-- Badly formed XML comment ignored for member "F:ProBuilder2.EditorCommon.pb_MissingScriptEditor.total" -->
        <!-- Badly formed XML comment ignored for member "F:ProBuilder2.EditorCommon.pb_MissingScriptEditor.doFix" -->
        <!-- Badly formed XML comment ignored for member "F:ProBuilder2.EditorCommon.pb_MissingScriptEditor.unfixable" -->
        <!-- Badly formed XML comment ignored for member "F:ProBuilder2.EditorCommon.pb_MissingScriptEditor._mono_pb" -->
        <!-- Badly formed XML comment ignored for member "F:ProBuilder2.EditorCommon.pb_MissingScriptEditor._mono_pe" -->
        <!-- Badly formed XML comment ignored for member "F:ProBuilder2.EditorCommon.pb_MissingScriptEditor._mono_dummy" -->
        <!-- Badly formed XML comment ignored for member "M:ProBuilder2.EditorCommon.pb_MissingScriptEditor.LoadMonoScript" -->
        <member name="M:ProBuilder2.EditorCommon.pb_MissingScriptEditor.Next">
            Advance to the next gameobject with missing components.  If none are found, display dialog and exit.
        </member>
        <member name="F:ProBuilder2.EditorCommon.pb_MissingScriptEditor.PB_OBJECT_SCRIPT_PROPERTIES">
            SerializedProperty names found in pb_Entity.
        </member>
        <member name="F:ProBuilder2.EditorCommon.pb_MissingScriptEditor.PB_ENTITY_SCRIPT_PROPERTIES">
            SerializedProperty names found in pb_Object.
        </member>
        <member name="M:ProBuilder2.EditorCommon.pb_MissingScriptEditor.DeleteDummyScripts">
            Scan the scene for gameObjects referencing `pb_DummyScript` and delete them.
        </member>
        <member name="M:ProBuilder2.EditorCommon.pb_MissingScriptEditor.SerializedObjectToString(UnityEditor.SerializedObject)">
            Returns a formatted string with all properties in serialized object.
        </member>
        <member name="M:ProBuilder2.EditorCommon.pb_MissingScriptEditor.SerializedPropertyValue(UnityEditor.SerializedProperty)">
            Return a string from the value of a SerializedProperty.
        </member>
        <member name="T:ProBuilder2.EditorCommon.pb_ScenePostProcessor">
            When building the project, remove all references to pb_Objects.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ExportObj">
            Deprecated - see MenuActions/Export/ExportObj.cs
        </member>
        <member name="T:ProBuilder2.Actions.pb_MakeMeshAsset">
            See MenuActions/Export/ExportAsset.cs
        </member>
        <member name="T:ProBuilder2.Actions.pb_ProBuilderize">
             Menu interface for pb_ProBuilderize functions.
            
             Deprecated as of 2.6.1.
             This file remains only for backwards compatibility; you may
             safely delete it.  
            	
             See also: ProBuilder2.Actions.ProBuilderize.
        </member>
        <member name="T:ProBuilder2.Actions.pb_BridgeEdges">
             Menu interface for Bridge edges functions.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ConformNormals">
             Menu interface for 'Conform Normals' action.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ConnectEdges">
            Deprecated as of 2.6.0.
            This file remains only for backwards compatibility; you may
            safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_DetachDeleteFace">
             Menu interface for deleting and detaching faces.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ExtrudeElement">
             Menu interface for extruding elements.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_FlipEdge">
             Menu interface for flip edges actions.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_FlipNormals">
             Menu interface for flip normals actions.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_FreezeTransform">
             Set the pivot point of a pb_Object mesh to 0,0,0 while retaining current world space.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_MergeFaces">
             Merge 2 or more faces into a single face.  Merged face
             retains the properties of the first selected face in the
             event of conflicts.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_SetPivot">
            Deprecated as of 2.6.0.
            This file remains only for backwards compatibility; you may
            safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_Triangulate">
             Triangulates a ProBuilder object.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_VertexMergeWeld">
             Menu interface for vertex merge / weld functions.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ForceSceneRefresh">
            Menu interface for manually re-generating all ProBuilder geometry in scene.
        </member>
        <member name="M:ProBuilder2.Actions.pb_ForceSceneRefresh.ForceRefresh(System.Boolean)">
            \brief Force refreshes all meshes in scene.
        </member>
        <member name="T:ProBuilder2.Actions.pb_RebuildMeshes">
            Menu interface for manually regenerating all ProBuilder mesh references in scene.
        </member>
        <member name="M:ProBuilder2.Actions.pb_RebuildMeshes.StripAndProBuilderize(pb_Object[],System.Boolean)">
            \brief Rebuild targets if they can't be refreshed.
        </member>
        <member name="T:ProBuilder2.Actions.pb_RebuildSharedIndices">
            Menu interface for manually regenerating all ProBuilder shared indices caches in selection.
        </member>
        <member name="M:ProBuilder2.Actions.pb_RebuildSharedIndices.RebuildSharedIndices(pb_Object[],System.Boolean)">
            \brief Rebuild targets if they can't be refreshed.
        </member>
        <member name="T:ProBuilder2.Actions.pb_RemoveDegenerateTris">
            Menu interface for removing degerate triangles.
        </member>
        <member name="T:ProBuilder2.Actions.pb_RepairColors">
            Menu interface for replacing vertex colors on broken objces.
        </member>
        <member name="T:ProBuilder2.Actions.pb_RepairMeshReferences">
            File stub retained for backwards compatibility.
            You may safely delete this file.
        </member>
        <member name="T:ProBuilder2.Actions.pb_RepairUV">
            File stub retained for backwards compatibility.
            You may safely delete this file.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ResetEntityMaterials">
            Menu interface for resetting the materials associated with special entity types.
        </member>
        <member name="M:ProBuilder2.Actions.pb_ResetEntityMaterials.RepairEntityMaterials">
            \brief Force refreshes all meshes in scene.
        </member>
        <member name="T:ProBuilder2.Actions.pb_UpgradeBasicToAdvanced">
            Menu interface for applying materials to pb_Object after upgrading from Basic to Advanced.
        </member>
        <member name="T:ProBuilder2.Actions.pb_EdgeSelection">
            Deprecated as of 2.6.0.
            This file remains only for backwards compatibility; you may
            safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ExpandSelection">
             Menu interface for 'Grow Selection' and 'Shrink Selection'
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_InvertSelection">
             Menu interface for inverting the current element selection.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_MaterialSelection">
             Menu actions for selecting faces with a material or vertex color.
            
             Deprecated as of 2.6.0.
             This file remains only for backwards compatibility; you may
             safely delete it.
        </member>
        <member name="T:ProBuilder2.Actions.pb_MaterialSelectionShortcut">
            Moved to pb_MenuAction implementation.
        </member>
        <member name="T:ProBuilder2.Actions.pb_ProBuilderMenuItems">
            Deprecated as of 2.6.0.
            This file remains only for backwards compatibility; you may
            safely delete it.	 
        </member>
        <member name="T:pg_AboutWindowSetup">
             INSTRUCTIONS
            
              - Only modify properties in the USER SETTINGS region.
            	- All content is loaded from external files (pc_AboutEntry_YourProduct.  Use the templates!
            Used to pop up the window on import.
        </member>
        <member name="F:pg_AboutWindow.ABOUT_ROOT">
            Modify these constants to customize about screen.
        </member>
        <member name="F:pg_AboutWindow.advertisements">
             Changelog.txt file should follow this format:
            
            	| -- Product Name 2.1.0 -
            	|
            	| # Features
            	| 	- All kinds of awesome stuff
            	| 	- New flux capacitor design achieves time travel at lower velocities.
            	| 	- Dark matter reactor recalibrated.
            	| 
            	| # Bug Fixes
            	| 	- No longer explodes when spacebar is pressed.
            	| 	- Fix rolling issue in Rickmeter.
            	| 	
            	| # Changes
            	| 	- Changed Blue to Red.
            	| 	- Enter key now causes explosions.
            
             This path is relative to the PRODUCT_ROOT path.
            
             Note that your changelog may contain multiple entries.  Only the top-most
             entry will be displayed.
             Advertisement thumb constructor is:
             new AdvertisementThumb( PathToAdImage : string, URLToPurchase : string, ProductDescription : string )
             Provide as many or few (or none) as desired.
            
             Notes - The http:// part is required.  Partial URLs do not work on Mac.
        </member>
        <member name="T:pg_AboutWindow.AdvertisementThumb">
            Struct containing data for use in Advertisement shelf.
        </member>
        <member name="M:pg_AboutWindow.Init(System.String,System.Boolean)">
            Return true if Init took place, false if not.
        </member>
        <member name="M:pg_AboutWindow.HorizontalLine">
            Draw a horizontal line across the screen and update the guilayout.
        </member>
        <member name="M:pg_AboutWindow.PopulateDataFields(System.String)">
            Open VersionInfo and Changelog and pull out text to populate vars for OnGUI to display.
        </member>
        <member name="M:ProGrids.pg_Initializer.#cctor">
            When opening Unity, remember whether or not ProGrids was open when Unity was shut down last.
        </member>
        <member name="F:ProGrids.pg_Editor.gridColorX">
            Settings *
        </member>
        <member name="F:ProGrids.pg_Editor.gridColorY">
            Settings *
        </member>
        <member name="F:ProGrids.pg_Editor.gridColorZ">
            Settings *
        </member>
        <member name="M:ProGrids.pg_Editor.UseAxisConstraints">
            Returns the value of useAxisConstraints, accounting for the shortcut key toggle.
        </member>
        <member name="M:ProGrids.pg_Editor.SnapValue">
            Return the current snap value.
        </member>
        <member name="M:ProGrids.pg_Editor.SnapEnabled">
            Return true if snapping is enabled, false otherwise.
        </member>
        <member name="M:ProGrids.pg_GridRenderer.Init">
            Destroy any existing render objects, then initialize new ones.
        </member>
        <member name="M:ProGrids.pg_GridRenderer.DrawPlane(UnityEngine.Camera,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)">
            Returns the distance this grid is drawing
        </member>
        <member name="M:ProGrids.pg_GridRenderer.DrawFullGrid(UnityEngine.Camera,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32,System.Int32,UnityEngine.Color,System.Single)">
            Draws a plane grid using pivot point, the right and forward directions, and how far each direction should extend
        </member>
        <member name="M:ProGrids.pg_GridRenderer.GetDistanceToFrustumPlanes(UnityEngine.Camera,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
            \brief Returns the distance from pivot to frustum plane in the order of
            float[] { tan, bitan, -tan, -bitan }
        </member>
        <member name="F:ProGrids.pg_Preferences.GRID_COLOR_X">
            Defaults *
        </member>
        <member name="T:ProGrids.pg_ToggleContent">
            A substitute for GUIContent that offers some additional functionality.
        </member>
    </members>
</doc>
